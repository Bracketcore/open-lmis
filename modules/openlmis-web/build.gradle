apply plugin: 'jetty'

dependencies {
    compile 'org.freemarker:freemarker:2.3.19',
            'org.springframework:spring-webmvc:3.1.1.RELEASE',
            'org.springframework:spring-web:3.1.1.RELEASE',
            'javax.servlet:servlet-api:2.5',
            'commons-collections:commons-collections:20040616',
            'org.springframework.security:spring-security-core:3.1.2.RELEASE',
            'org.springframework.security:spring-security-web:3.1.3.RELEASE',
            'org.springframework.security:spring-security-config:3.1.3.RELEASE',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.9',
            project(':modules:authentication'),
            project(':modules:admin-web'),
            project(':modules:authentication'),
            'org.json:json:20090211'

    testCompile 'org.springframework:spring-test:3.1.1.RELEASE',
            'org.springframework:spring-test-mvc:1.0.0.M1',
            'javax.servlet:servlet-api:2.5'
}

[jettyRun]*.configure {
    contextPath = "openlmis"
}

war.dependsOn([':modules:admin-web:war', ':modules:core-web:war'])

war.doFirst {
    from zipTree(project(':modules:admin-web').war.archivePath)  //exclude { details -> details.file.name.endsWith('.xml') && details.file.text.contains('web') }
    from zipTree(project(':modules:core-web').war.archivePath) //exclude { details -> details.file.name.endsWith('.xml') && details.file.text.contains('web') }
    into('WEB-INF') {
        from 'src/main/webapp/WEB-INF/web.xml'
    }
}

task jettyRunWarDaemon(dependsOn: war)

jettyRunWarDaemon.doFirst {
    jettyRunWar.daemon = true
    jettyRunWar.httpPort = 9090
    jettyRunWar.contextPath = 'openlmis'
    jettyRunWar.execute()
}

task jettyRunWarLocal(dependsOn: war)

jettyRunWarLocal.doFirst {
    jettyRunWar.daemon = false
    jettyRunWar.httpPort = 9091
    jettyRunWar.execute()
}

task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

task deployOpenLmis(type: GradleBuild) {
    tasks = ['build']
    tasks = ['cargoRedeployRemote']
}

