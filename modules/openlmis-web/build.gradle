apply plugin: 'jetty'
apply plugin: 'war'

buildscript {
    repositories {
        mavenCentral();
         add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath "com.github.dzhaughnroth:jasmine-gradle-plugin:0.4"
        classpath "org.lesscss:lesscss:1.3.1"
        classpath 'bmuschko:gradle-cargo-plugin:0.5.6'
    }
}

apply plugin: 'jasmineGradle'
convention.plugins.jasmineGradlePlugin.sourceIncludes += 'src/main/webapp/**'

dependencies {
    compile 'org.springframework:spring-webmvc:3.1.1.RELEASE',
            'org.springframework:spring-core:3.1.1.RELEASE',
            'org.springframework:spring-web:3.1.1.RELEASE',
            'javax.servlet:servlet-api:2.5',
            'commons-collections:commons-collections:20040616',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.9',
            'org.springframework.security:spring-security-taglibs:3.1.2.RELEASE',
            'org.json:json:20090211',
            'log4j:log4j:1.2.15',
            'org.aspectj:aspectjweaver:1.7.0',
            'cglib:cglib:2.2.2',
            'commons-fileupload:commons-fileupload:1.2.2',
            'javax.servlet:servlet-api:2.5',
            project(':modules:authentication'),
            project(':modules:requisition'),
            project(':modules:core')

    testCompile 'org.springframework:spring-test:3.1.1.RELEASE',
            'org.springframework:spring-test-mvc:1.0.0.M1',
            'javax.servlet:servlet-api:2.5',
            'javax.servlet:servlet-api:2.5',
            'org.powermock:powermock-api-mockito:1.4.12',
            'org.powermock:powermock-module-junit4:1.4.12',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.9',
            'cglib:cglib:2.2.2',
            project(':modules:requisition')

}

[jettyRun]*.configure {
    contextPath = ''
}

task jettyRunWarDaemon(dependsOn: war)

jettyRunWarDaemon.doFirst {
    jettyRunWar.daemon = true
    jettyRunWar.httpPort = 9090
    jettyRunWar.contextPath = ''
    jettyRunWar.execute()
}

task jettyRunWarLocal(dependsOn: war)

jettyRunWarLocal.doFirst {
    jettyRunWar.daemon = false
    jettyRunWar.httpPort = 9091
    jettyRunWar.execute()
    jettyRunWar.contextPath = ''
}

jettyRun {
    jettyRun.httpPort = 9091
    contextPath = ''
}

task run(dependsOn: jettyRun)

task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

task deployOpenLmis(type: GradleBuild) {
    tasks = ['build']
    tasks = ['cargoRedeployRemote']
}

task compileLess << {
    println "Running lessCompile task..."
    def lessCompiler = new org.lesscss.LessCompiler()

    def files = file('src/main/webapp/public/less').listFiles()
    files.each { File file ->
        def outputCss = new File("${projectDir}/src/main/webapp/public/css/" + file.name.replace(".less", ".css"))
        println "LESS: Compiling ${file} to ${outputCss}..."
        lessCompiler.compile(file, outputCss)
    }
}

compileJava.dependsOn compileLess
