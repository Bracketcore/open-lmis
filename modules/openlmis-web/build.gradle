apply plugin: 'idea'
apply plugin: 'cargo'
apply plugin: 'jetty'


repositories{
    mavenCentral()
}

buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath 'bmuschko:gradle-cargo-plugin:0.5.6'
    }
}

dependencies {
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

task buildAdmin(type: GradleBuild) {
    buildFile = '../admin-web/build.gradle'
    tasks = ['build']
}

task buildOpenLmis(type: GradleBuild) {
    buildFile = '../core-web/build.gradle'
    tasks = ['build']
}

war.doFirst {
    tasks.buildAdmin.execute()
    tasks.buildOpenLmis.execute()
    from zipTree(project(':modules:admin-web').war.archivePath)  //exclude { details -> details.file.name.endsWith('.xml') && details.file.text.contains('web') }
    from zipTree(project(':modules:core-web').war.archivePath) //exclude { details -> details.file.name.endsWith('.xml') && details.file.text.contains('web') }
    into('WEB-INF') {
        from 'src/main/webapp/WEB-INF/web.xml'
    }
}

task jettyRunWarDaemon(dependsOn:war)

jettyRunWarDaemon.doFirst{
    jettyRunWar.daemon=true
    jettyRunWar.httpPort=9090
    jettyRunWar.contextPath='openlmis'
    jettyRunWar.execute()
}

cargo {
    containerId = serverName
    port = Integer.valueOf(serverPort)
    remote {
        hostname = serverHostName
        username = serverUserName
        password = serverPassword
    }
}
task jettyRunWarLocal(dependsOn:war)

jettyRunWarLocal.doFirst{
    jettyRunWar.daemon = false
    jettyRunWar.httpPort=9091
    jettyRunWar.execute()
}

task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

task deployOpenLmis(type: GradleBuild) {
    tasks = ['build']
    tasks = ['cargoRedeployRemote']
}

