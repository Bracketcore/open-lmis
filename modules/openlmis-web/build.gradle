apply plugin: 'jetty'

buildscript {
    repositories {
        mavenCentral();
    }
    dependencies {
        classpath "com.github.dzhaughnroth:jasmine-gradle-plugin:0.4"
    }
}

apply plugin: 'jasmineGradle'
convention.plugins.jasmineGradlePlugin.sourceIncludes += 'src/main/webapp/**'

dependencies {
    compile 'org.springframework:spring-webmvc:3.1.1.RELEASE',
            'org.springframework:spring-web:3.1.1.RELEASE',
            'javax.servlet:servlet-api:2.5',
            'commons-collections:commons-collections:20040616',
            'org.codehaus.jackson:jackson-mapper-asl:1.9.9',
            project(':modules:authentication'),
            project(':modules:admin-web'),
            project(':modules:logistics-web'),
            'org.json:json:20090211',
            'log4j:log4j:1.2.15',
            'org.aspectj:aspectjweaver:1.7.0',
            'cglib:cglib:2.2.2',
            'commons-fileupload:commons-fileupload:1.2.2'

    testCompile 'org.springframework:spring-test:3.1.1.RELEASE',
            'org.springframework:spring-test-mvc:1.0.0.M1',
            'javax.servlet:servlet-api:2.5'
}

[jettyRun]*.configure {
    contextPath = ''
}

war.dependsOn([':modules:admin-web:war', ':modules:logistics-web:war'])

war.doFirst {
    from zipTree(project(':modules:admin-web').war.archivePath)  //exclude { details -> details.file.name.endsWith('.xml') && details.file.text.contains('web') }
    from zipTree(project(':modules:logistics-web').war.archivePath) //exclude { details -> details.file.name.endsWith('.xml') && details.file.text.contains('web') }
    into('WEB-INF') {
        from 'src/main/webapp/WEB-INF/web.xml'
    }
}

task jettyRunWarDaemon(dependsOn: war)

jettyRunWarDaemon.doFirst {
    jettyRunWar.daemon = true
    jettyRunWar.httpPort = 9090
    jettyRunWar.contextPath = ''
    jettyRunWar.execute()
}

task jettyRunWarLocal(dependsOn: war)

jettyRunWarLocal.doFirst {
    jettyRunWar.daemon = false
    jettyRunWar.httpPort = 9091
    jettyRunWar.execute()
    jettyRunWar.contextPath = ''
}


jettyRun{
    jettyRun.httpPort = 9091
    contextPath = ''
}

task jettyRunDev(dependsOn: jettyRun)


task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

task deployOpenLmis(type: GradleBuild) {
    tasks = ['build']
    tasks = ['cargoRedeployRemote']
}

