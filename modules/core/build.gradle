/*
 * This program is part of the OpenLMIS logistics management information system platform software.
 * Copyright © 2013 VillageReach
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License along with this program.  If not, see http://www.gnu.org/licenses.  For additional information contact info@OpenLMIS.org. 
 */

apply plugin: 'cobertura'

dependencies {

    compile "postgresql:postgresql:9.1-901.jdbc4",
            'org.springframework:spring-webmvc:4.1.5.RELEASE',
            'org.springframework:spring-web:4.1.5.RELEASE',
            'org.springframework:spring-aspects:4.1.5.RELEASE',
            'org.springframework:spring-messaging:4.1.5.RELEASE',
            'org.springframework.integration:spring-integration-ftp:4.1.2.RELEASE',
            'org.aspectj:aspectjrt:1.7.0',
            'org.projectlombok:lombok:1.16.2',
            'com.fasterxml.jackson.core:jackson-databind:2.5.1',
            'com.fasterxml.jackson.core:jackson-core:2.5.1',
            'com.fasterxml.jackson.core:jackson-annotations:2.5.1',
            'joda-time:joda-time:2.1',
            'commons-codec:commons-codec:1.10',
            'org.ict4h:atomfeed-commons:0.9.2',
            'org.ict4h:atomfeed-server:0.9.2',
            'org.ict4h:atomfeed-spring-server:0.9.2',
            project(':modules:db'),
            project(':modules:email'),
            project(':modules:sms'),
            project(':modules:upload')

    testCompile 'org.springframework:spring-test:4.1.5.RELEASE',
            project(path: ':modules:email', configuration: 'testFixtures')


    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        testFixtures testJar
    }
}

cobertura {
    coverageFormats << 'xml'
}

