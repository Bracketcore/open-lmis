dependencies {
    compile 'org.springframework:spring-core:3.1.1.RELEASE',
            'org.springframework:spring-web:3.1.1.RELEASE',
            'org.springframework:spring-webmvc:3.1.1.RELEASE',
            'org.springframework:spring-context:3.1.1.RELEASE',
            'org.springframework:spring-aop:3.1.1.RELEASE',
            'org.springframework:spring-context-support:3.1.1.RELEASE',
            'javax.servlet:servlet-api:2.5',
            'log4j:log4j:1.2.17',
            'com.itextpdf:itextpdf:5.4.0',
            'com.lowagie:itext:2.1.7',
            'net.sf.jasperreports:jasperreports:5.0.1',
            'org.apache.poi:poi:3.9',
            'org.codehaus.groovy:groovy-all:2.1.1',
            'commons-digester:commons-digester:2.1',
            project(':modules:db'),
            project(':modules:core')

    testCompile 'org.springframework:spring-test:3.1.1.RELEASE',
            project(':modules:db'),
            project(path : ':modules:core', configuration: 'testFixtures')

    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }


    task compileJasperReport(type: JavaExec) {
        main = 'org.openlmis.report.util.JasperReportCompiler'
        //  args = "".split().toList()
          classpath sourceSets.main.output.classesDir
        classpath configurations.runtime
    }

    compileJava.doLast{
        tasks.compileJasperReport.execute()
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        testFixtures testJar
    }

}

